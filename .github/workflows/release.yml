name: Build and Publish Release

on:
  push:
    branches:
      - main
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: AAAAAAA
        run: |
          python -c "import customtkinter; print(customtkinter.__file__)"

      - name: Build package
        run: pyinstaller --noconfirm --onefile --windowed --icon "pictures/icon.ico" --add-data "/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/customtkinter:customtkinter"  "csc.py"

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/csc.exe

      # - name: Create GitHub release
      #   id: create-new-release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.run_number }}
      #     release_name: Release ${{ github.run_number }}

      # - name: Debug
      #   run: echo Upload URL ${{ steps.create-new-release.outputs.upload_url }}

      # - name: Upload release assets
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create-new-release.outputs.upload_url }}
      #     asset_path: ./dist/csc.exe
      #     asset_name: csc-v${{ github.run_number }}.exe
      #     asset_content_type: application/exe

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     body: |
      #       Changes in this Release
      #       - First Change
      #       - Second Change
      #     draft: false
      #     prerelease: false
