name: Create Release
on:
  push:
    branches:
      - main

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Тут можуть бути ваші тести

      - name: Create Release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_NAME="Your Release Name"
          RELEASE_TAG="v1.0.0"
          RELEASE_BODY="Your release notes or description"
          REPO_OWNER="${{ github.repository_owner }}"
          REPO_NAME="${{ github.repository }}"
          
          API_URL="https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/releases"
          
          RESPONSE=$(curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
              "tag_name": "'"$RELEASE_TAG"'",
              "target_commitish": "main",
              "name": "'"$RELEASE_NAME"'",
              "body": "'"$RELEASE_BODY"'",
              "draft": false,
              "prerelease": false
            }' \
            "$API_URL")
          
          RELEASE_ID=$(echo "$RESPONSE" | jq -r '.id')
          echo "::set-output name=release_id::$RELEASE_ID"
      
      - name: Publish Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_ID="${{ steps.create_release.outputs.release_id }}"
          REPO_OWNER="${{ github.repository_owner }}"
          REPO_NAME="${{ github.repository }}"
          
          API_URL="https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/releases/$RELEASE_ID"
          
          curl -X PATCH \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
              "draft": false
            }' \
            "$API_URL"
